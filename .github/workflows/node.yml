# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

#SetNodeAndPnpm: &set-node

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  #  setup:
  #
  #    runs-on: ubuntu-latest
  #
  #    strategy:
  #      matrix:
  #        node-version: [12.x, 14.x, 16.x, 17.x]
  #        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
  #
  #    steps:
  #      - uses: actions/checkout@v2
  #        name: Checkout [main]
  #        with:
  #          fetch-depth: 0
  #      - name: Use Node.js ${{ matrix.node-version }}
  #        uses: actions/setup-node@v2
  #        with:
  #          node-version: ${{ matrix.node-version }}
  #      - run: git config --global user.email krupnik.yuri@gmail.com && git config --global user.name yurikrupnik
  #      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
  #      - run: ls

  #  all-cached:
  #    runs-on: ubuntu-latest
  #    #    strategy:
  #    #      matrix:
  #    #        node-version: [ 12.x, 14.x, 16.x, 17.x ]
  #    steps:
  #      - uses: actions/checkout@v2
  #        with:
  #          fetch-depth: 0
  #      - name: Use Node.js 16.x
  #        uses: actions/setup-node@v2
  #        with:
  #          node-version: 16
  #      - name: Get Yarn cache directory
  #        id: yarn-cache-dir-path
  #        run: echo "::set-output name=dir::$(yarn config get cacheFolder)" # v1 yarn cache dir
  #      - name: Use Yarn cache
  #        uses: actions/cache@v2
  #        id: yarn-cache
  #        with:
  #          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
  #      - run: yarn install
  #      - run: node -v
  #      - run: yarn -v
  #      - run: yarn build
  #      - run: yarn test
  #      - run: yarn lint
  #  all:
  #    runs-on: ubuntu-latest
  ##    strategy:
  ##      matrix:
  ##        node-version: [ 12.x, 14.x, 16.x, 17.x ]
  #    steps:
  #      - uses: actions/checkout@v2
  #        with:
  #          fetch-depth: 0
  #      - name: Use Node.js 16.x
  #        uses: actions/setup-node@v2
  #        with:
  #          node-version: 16
  #      - name: Get Yarn cache directory
  #        id: yarn-cache-dir-path
  #        run: echo "::set-output name=dir::$(yarn config get cacheFolder)" # v1 yarn cache dir
  #      - name: Use Yarn cache
  #        uses: actions/cache@v2
  #        id: yarn-cache
  #        with:
  #          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
  #      - run: yarn install
  #      - run: node -v
  #      - run: yarn -v
  #      - run: yarn build --skip-nx-cache --verbose
  #      - run: yarn test --skip-nx-cache --verbose
  #      - run: yarn lint
  #      - run: yarn e2e --verbose
  build:
    runs-on: ubuntu-latest
    #    needs: [ 'setup' ]
    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 17.x ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)" # v1 yarn cache dir
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: node -v
      - run: yarn build

  test:
    runs-on: ubuntu-latest
    #    needs: ['setup']
    strategy:
      matrix:
        node-version: [ 14.x, 16.x ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)" # v1 yarn cache dir
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn test
  lint:
    runs-on: ubuntu-latest
    #    needs: [ 'setup' ]
    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 17.x ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)" # v1 yarn cache dir
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn lint

  e2e:
    runs-on: ubuntu-latest
    #    needs: [ 'setup' ]
    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 17.x ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)" # v1 yarn cache dir
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn e2e
